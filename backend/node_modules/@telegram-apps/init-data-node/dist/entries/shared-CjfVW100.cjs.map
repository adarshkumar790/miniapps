{"version":3,"file":"shared-CjfVW100.cjs","sources":["../../src/hashToken.ts","../../../transformers/dist/index.js","../../src/sign.ts","../../src/converters/arrayBufferToHex.ts","../../src/converters/hexToArrayBuffer.ts","../../src/signData.ts","../../src/errors.ts","../../src/validate.ts","../../src/isValid.ts","../../src/validate3rd.ts","../../src/isValid3rd.ts","../../src/parse.ts","../../src/entries/shared.ts"],"sourcesContent":["import type { CreateHmacFn, Text } from './types.js';\n\nexport function hashToken<H extends CreateHmacFn<any>>(token: Text, createHmac: H): ReturnType<H> {\n  return createHmac(token, 'WebAppData') as ReturnType<H>;\n}\n","var b;\n// @__NO_SIDE_EFFECTS__\nfunction N(e) {\n  return {\n    lang: (e == null ? void 0 : e.lang) ?? (b == null ? void 0 : b.lang),\n    message: e == null ? void 0 : e.message,\n    abortEarly: (e == null ? void 0 : e.abortEarly) ?? (b == null ? void 0 : b.abortEarly),\n    abortPipeEarly: (e == null ? void 0 : e.abortPipeEarly) ?? (b == null ? void 0 : b.abortPipeEarly)\n  };\n}\nvar D;\n// @__NO_SIDE_EFFECTS__\nfunction Z(e) {\n  return D == null ? void 0 : D.get(e);\n}\nvar P;\n// @__NO_SIDE_EFFECTS__\nfunction ee(e) {\n  return P == null ? void 0 : P.get(e);\n}\nvar j;\n// @__NO_SIDE_EFFECTS__\nfunction ne(e, n) {\n  var r;\n  return (r = j == null ? void 0 : j.get(e)) == null ? void 0 : r.get(n);\n}\n// @__NO_SIDE_EFFECTS__\nfunction re(e) {\n  var r, t;\n  const n = typeof e;\n  return n === \"string\" ? `\"${e}\"` : n === \"number\" || n === \"bigint\" || n === \"boolean\" ? `${e}` : n === \"object\" || n === \"function\" ? (e && ((t = (r = Object.getPrototypeOf(e)) == null ? void 0 : r.constructor) == null ? void 0 : t.name)) ?? \"null\" : n;\n}\nfunction f(e, n, r, t, s) {\n  const u = s && \"input\" in s ? s.input : r.value, i = (s == null ? void 0 : s.expected) ?? e.expects ?? null, l = (s == null ? void 0 : s.received) ?? /* @__PURE__ */ re(u), o = {\n    kind: e.kind,\n    type: e.type,\n    input: u,\n    expected: i,\n    received: l,\n    message: `Invalid ${n}: ${i ? `Expected ${i} but r` : \"R\"}eceived ${l}`,\n    requirement: e.requirement,\n    path: s == null ? void 0 : s.path,\n    issues: s == null ? void 0 : s.issues,\n    lang: t.lang,\n    abortEarly: t.abortEarly,\n    abortPipeEarly: t.abortPipeEarly\n  }, y = e.kind === \"schema\", p = (s == null ? void 0 : s.message) ?? e.message ?? /* @__PURE__ */ ne(e.reference, o.lang) ?? (y ? /* @__PURE__ */ ee(o.lang) : null) ?? t.message ?? /* @__PURE__ */ Z(o.lang);\n  p && (o.message = typeof p == \"function\" ? (\n    // @ts-expect-error\n    p(o)\n  ) : p), y && (r.typed = !1), r.issues ? r.issues.push(o) : r.issues = [o];\n}\n// @__NO_SIDE_EFFECTS__\nfunction h(e) {\n  return {\n    version: 1,\n    vendor: \"valibot\",\n    validate(n) {\n      return e[\"~run\"]({ value: n }, /* @__PURE__ */ N());\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction W(e, n) {\n  return Object.hasOwn(e, n) && n !== \"__proto__\" && n !== \"prototype\" && n !== \"constructor\";\n}\n// @__NO_SIDE_EFFECTS__\nfunction te(e, n) {\n  const r = [...new Set(e)];\n  return r.length > 1 ? `(${r.join(` ${n} `)})` : r[0] ?? \"never\";\n}\nvar se = class extends Error {\n  /**\n   * Creates a Valibot error with useful information.\n   *\n   * @param issues The error issues.\n   */\n  constructor(e) {\n    super(e[0].message), this.name = \"ValiError\", this.issues = e;\n  }\n};\n// @__NO_SIDE_EFFECTS__\nfunction L(e, n) {\n  return {\n    kind: \"validation\",\n    type: \"check\",\n    reference: L,\n    async: !1,\n    expects: null,\n    requirement: e,\n    message: n,\n    \"~run\"(r, t) {\n      return r.typed && !this.requirement(r.value) && f(this, \"input\", r, t), r;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction R(e) {\n  return {\n    kind: \"validation\",\n    type: \"integer\",\n    reference: R,\n    async: !1,\n    expects: null,\n    requirement: Number.isInteger,\n    message: e,\n    \"~run\"(n, r) {\n      return n.typed && !this.requirement(n.value) && f(this, \"integer\", n, r), n;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction d(e) {\n  return {\n    kind: \"transformation\",\n    type: \"transform\",\n    reference: d,\n    async: !1,\n    operation: e,\n    \"~run\"(n) {\n      return n.value = this.operation(n.value), n;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction U(e, n, r) {\n  return typeof e.default == \"function\" ? (\n    // @ts-expect-error\n    e.default(n, r)\n  ) : (\n    // @ts-expect-error\n    e.default\n  );\n}\n// @__NO_SIDE_EFFECTS__\nfunction ie(e, n) {\n  return !e[\"~run\"]({ value: n }, { abortEarly: !0 }).issues;\n}\n// @__NO_SIDE_EFFECTS__\nfunction _(e) {\n  return {\n    kind: \"schema\",\n    type: \"boolean\",\n    reference: _,\n    expects: \"boolean\",\n    async: !1,\n    message: e,\n    get \"~standard\"() {\n      return /* @__PURE__ */ h(this);\n    },\n    \"~run\"(n, r) {\n      return typeof n.value == \"boolean\" ? n.typed = !0 : f(this, \"type\", n, r), n;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction z(e) {\n  return {\n    kind: \"schema\",\n    type: \"date\",\n    reference: z,\n    expects: \"Date\",\n    async: !1,\n    message: e,\n    get \"~standard\"() {\n      return /* @__PURE__ */ h(this);\n    },\n    \"~run\"(n, r) {\n      return n.value instanceof Date ? isNaN(n.value) ? f(this, \"type\", n, r, {\n        received: '\"Invalid Date\"'\n      }) : n.typed = !0 : f(this, \"type\", n, r), n;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction J(e, n) {\n  return {\n    kind: \"schema\",\n    type: \"instance\",\n    reference: J,\n    expects: e.name,\n    async: !1,\n    class: e,\n    message: n,\n    get \"~standard\"() {\n      return /* @__PURE__ */ h(this);\n    },\n    \"~run\"(r, t) {\n      return r.value instanceof this.class ? r.typed = !0 : f(this, \"type\", r, t), r;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction A(e) {\n  return {\n    kind: \"schema\",\n    type: \"lazy\",\n    reference: A,\n    expects: \"unknown\",\n    async: !1,\n    getter: e,\n    get \"~standard\"() {\n      return /* @__PURE__ */ h(this);\n    },\n    \"~run\"(n, r) {\n      return this.getter(n.value)[\"~run\"](n, r);\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction k(e, n) {\n  return {\n    kind: \"schema\",\n    type: \"loose_object\",\n    reference: k,\n    expects: \"Object\",\n    async: !1,\n    entries: e,\n    message: n,\n    get \"~standard\"() {\n      return /* @__PURE__ */ h(this);\n    },\n    \"~run\"(r, t) {\n      var u;\n      const s = r.value;\n      if (s && typeof s == \"object\") {\n        r.typed = !0, r.value = {};\n        for (const i in this.entries) {\n          const l = this.entries[i];\n          if (i in s || (l.type === \"exact_optional\" || l.type === \"optional\" || l.type === \"nullish\") && // @ts-expect-error\n          l.default !== void 0) {\n            const o = i in s ? (\n              // @ts-expect-error\n              s[i]\n            ) : /* @__PURE__ */ U(l), y = l[\"~run\"]({ value: o }, t);\n            if (y.issues) {\n              const p = {\n                type: \"object\",\n                origin: \"value\",\n                input: s,\n                key: i,\n                value: o\n              };\n              for (const m of y.issues)\n                m.path ? m.path.unshift(p) : m.path = [p], (u = r.issues) == null || u.push(m);\n              if (r.issues || (r.issues = y.issues), t.abortEarly) {\n                r.typed = !1;\n                break;\n              }\n            }\n            y.typed || (r.typed = !1), r.value[i] = y.value;\n          } else if (l.type !== \"exact_optional\" && l.type !== \"optional\" && l.type !== \"nullish\" && (f(this, \"key\", r, t, {\n            input: void 0,\n            expected: `\"${i}\"`,\n            path: [\n              {\n                type: \"object\",\n                origin: \"key\",\n                input: s,\n                key: i,\n                // @ts-expect-error\n                value: s[i]\n              }\n            ]\n          }), t.abortEarly))\n            break;\n        }\n        if (!r.issues || !t.abortEarly)\n          for (const i in s)\n            /* @__PURE__ */ W(s, i) && !(i in this.entries) && (r.value[i] = s[i]);\n      } else\n        f(this, \"type\", r, t);\n      return r;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction E(e) {\n  return {\n    kind: \"schema\",\n    type: \"number\",\n    reference: E,\n    expects: \"number\",\n    async: !1,\n    message: e,\n    get \"~standard\"() {\n      return /* @__PURE__ */ h(this);\n    },\n    \"~run\"(n, r) {\n      return typeof n.value == \"number\" && !isNaN(n.value) ? n.typed = !0 : f(this, \"type\", n, r), n;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction c(e, n) {\n  return {\n    kind: \"schema\",\n    type: \"optional\",\n    reference: c,\n    expects: `(${e.expects} | undefined)`,\n    async: !1,\n    wrapped: e,\n    default: n,\n    get \"~standard\"() {\n      return /* @__PURE__ */ h(this);\n    },\n    \"~run\"(r, t) {\n      return r.value === void 0 && (this.default !== void 0 && (r.value = /* @__PURE__ */ U(this, r, t)), r.value === void 0) ? (r.typed = !0, r) : this.wrapped[\"~run\"](r, t);\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction V(e, n, r) {\n  return {\n    kind: \"schema\",\n    type: \"record\",\n    reference: V,\n    expects: \"Object\",\n    async: !1,\n    key: e,\n    value: n,\n    message: r,\n    get \"~standard\"() {\n      return /* @__PURE__ */ h(this);\n    },\n    \"~run\"(t, s) {\n      var i, l;\n      const u = t.value;\n      if (u && typeof u == \"object\") {\n        t.typed = !0, t.value = {};\n        for (const o in u)\n          if (/* @__PURE__ */ W(u, o)) {\n            const y = u[o], p = this.key[\"~run\"]({ value: o }, s);\n            if (p.issues) {\n              const S = {\n                type: \"object\",\n                origin: \"key\",\n                input: u,\n                key: o,\n                value: y\n              };\n              for (const g of p.issues)\n                g.path = [S], (i = t.issues) == null || i.push(g);\n              if (t.issues || (t.issues = p.issues), s.abortEarly) {\n                t.typed = !1;\n                break;\n              }\n            }\n            const m = this.value[\"~run\"](\n              { value: y },\n              s\n            );\n            if (m.issues) {\n              const S = {\n                type: \"object\",\n                origin: \"value\",\n                input: u,\n                key: o,\n                value: y\n              };\n              for (const g of m.issues)\n                g.path ? g.path.unshift(S) : g.path = [S], (l = t.issues) == null || l.push(g);\n              if (t.issues || (t.issues = m.issues), s.abortEarly) {\n                t.typed = !1;\n                break;\n              }\n            }\n            (!p.typed || !m.typed) && (t.typed = !1), p.typed && (t.value[p.value] = m.value);\n          }\n      } else\n        f(this, \"type\", t, s);\n      return t;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction a(e) {\n  return {\n    kind: \"schema\",\n    type: \"string\",\n    reference: a,\n    expects: \"string\",\n    async: !1,\n    message: e,\n    get \"~standard\"() {\n      return /* @__PURE__ */ h(this);\n    },\n    \"~run\"(n, r) {\n      return typeof n.value == \"string\" ? n.typed = !0 : f(this, \"type\", n, r), n;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction O(e) {\n  let n;\n  if (e)\n    for (const r of e)\n      n ? n.push(...r.issues) : n = r.issues;\n  return n;\n}\n// @__NO_SIDE_EFFECTS__\nfunction $(e, n) {\n  return {\n    kind: \"schema\",\n    type: \"union\",\n    reference: $,\n    expects: /* @__PURE__ */ te(\n      e.map((r) => r.expects),\n      \"|\"\n    ),\n    async: !1,\n    options: e,\n    message: n,\n    get \"~standard\"() {\n      return /* @__PURE__ */ h(this);\n    },\n    \"~run\"(r, t) {\n      let s, u, i;\n      for (const l of this.options) {\n        const o = l[\"~run\"]({ value: r.value }, t);\n        if (o.typed)\n          if (o.issues)\n            u ? u.push(o) : u = [o];\n          else {\n            s = o;\n            break;\n          }\n        else\n          i ? i.push(o) : i = [o];\n      }\n      if (s)\n        return s;\n      if (u) {\n        if (u.length === 1)\n          return u[0];\n        f(this, \"type\", r, t, {\n          issues: /* @__PURE__ */ O(u)\n        }), r.typed = !0;\n      } else {\n        if ((i == null ? void 0 : i.length) === 1)\n          return i[0];\n        f(this, \"type\", r, t, {\n          issues: /* @__PURE__ */ O(i)\n        });\n      }\n      return r;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction q() {\n  return {\n    kind: \"schema\",\n    type: \"unknown\",\n    reference: q,\n    expects: \"unknown\",\n    async: !1,\n    get \"~standard\"() {\n      return /* @__PURE__ */ h(this);\n    },\n    \"~run\"(e) {\n      return e.typed = !0, e;\n    }\n  };\n}\nfunction B(e, n, r) {\n  const t = e[\"~run\"]({ value: n }, /* @__PURE__ */ N(r));\n  if (t.issues)\n    throw new se(t.issues);\n  return t.value;\n}\n// @__NO_SIDE_EFFECTS__\nfunction v(...e) {\n  return {\n    ...e[0],\n    pipe: e,\n    get \"~standard\"() {\n      return /* @__PURE__ */ h(this);\n    },\n    \"~run\"(n, r) {\n      for (const t of e)\n        if (t.kind !== \"metadata\") {\n          if (n.issues && (t.kind === \"schema\" || t.kind === \"transformation\")) {\n            n.typed = !1;\n            break;\n          }\n          (!n.issues || !r.abortEarly && !r.abortPipeEarly) && (n = t[\"~run\"](n, r));\n        }\n      return n;\n    }\n  };\n}\nfunction ue(e) {\n  return e.replace(/_[a-z]/g, (n) => n[1].toUpperCase());\n}\nfunction ae(e) {\n  return Object.entries(e).reduce((n, [r, t]) => (n[ue(r)] = t, n), {});\n}\nfunction w(e) {\n  const n = ae(e);\n  for (const r in n) {\n    const t = n[r];\n    t && typeof t == \"object\" && !(t instanceof Date) && (n[r] = Array.isArray(t) ? t.map(w) : w(t));\n  }\n  return n;\n}\nfunction I(e) {\n  return /* @__PURE__ */ d((n) => e ? w(n) : n);\n}\nfunction M(e) {\n  return (n) => /* @__PURE__ */ v(\n    e,\n    I(n)\n  );\n}\nfunction T(e) {\n  return (n, r) => B(\n    /* @__PURE__ */ v(e, I(r)),\n    n\n  );\n}\nfunction oe() {\n  return /* @__PURE__ */ d(JSON.parse);\n}\nfunction C(e) {\n  const n = M(e);\n  return (r) => /* @__PURE__ */ v(\n    /* @__PURE__ */ a(),\n    oe(),\n    n(r)\n  );\n}\nfunction ce(e) {\n  return /* @__PURE__ */ d((n) => {\n    const r = {};\n    return new URLSearchParams(n).forEach((t, s) => {\n      const u = r[s];\n      Array.isArray(u) ? u.push(t) : u === void 0 ? r[s] = t : r[s] = [u, t];\n    }), B(e, r);\n  });\n}\nfunction K(e) {\n  return (n) => /* @__PURE__ */ v(\n    /* @__PURE__ */ $([/* @__PURE__ */ a(), /* @__PURE__ */ J(URLSearchParams)]),\n    ce(e),\n    I(n)\n  );\n}\nconst Q = /* @__PURE__ */ c(/* @__PURE__ */ A(() => he())), le = /* @__PURE__ */ k({\n  id: /* @__PURE__ */ E(),\n  photo_url: /* @__PURE__ */ c(/* @__PURE__ */ a()),\n  type: /* @__PURE__ */ a(),\n  title: /* @__PURE__ */ a(),\n  username: /* @__PURE__ */ c(/* @__PURE__ */ a())\n}), pe = /* @__PURE__ */ k({\n  added_to_attachment_menu: /* @__PURE__ */ c(/* @__PURE__ */ _()),\n  allows_write_to_pm: /* @__PURE__ */ c(/* @__PURE__ */ _()),\n  first_name: /* @__PURE__ */ a(),\n  id: /* @__PURE__ */ E(),\n  is_bot: /* @__PURE__ */ c(/* @__PURE__ */ _()),\n  is_premium: /* @__PURE__ */ c(/* @__PURE__ */ _()),\n  last_name: /* @__PURE__ */ c(/* @__PURE__ */ a()),\n  language_code: /* @__PURE__ */ c(/* @__PURE__ */ a()),\n  photo_url: /* @__PURE__ */ c(/* @__PURE__ */ a()),\n  username: /* @__PURE__ */ c(/* @__PURE__ */ a())\n}), fe = /* @__PURE__ */ k({\n  auth_date: /* @__PURE__ */ v(\n    /* @__PURE__ */ a(),\n    /* @__PURE__ */ d((e) => new Date(Number(e) * 1e3)),\n    /* @__PURE__ */ z()\n  ),\n  can_send_after: /* @__PURE__ */ c(/* @__PURE__ */ v(/* @__PURE__ */ a(), /* @__PURE__ */ d(Number), /* @__PURE__ */ R())),\n  chat: /* @__PURE__ */ c(/* @__PURE__ */ A(() => ye())),\n  chat_type: /* @__PURE__ */ c(/* @__PURE__ */ a()),\n  chat_instance: /* @__PURE__ */ c(/* @__PURE__ */ a()),\n  hash: /* @__PURE__ */ a(),\n  query_id: /* @__PURE__ */ c(/* @__PURE__ */ a()),\n  receiver: Q,\n  start_param: /* @__PURE__ */ c(/* @__PURE__ */ a()),\n  signature: /* @__PURE__ */ a(),\n  user: Q\n}), ye = C(le), he = C(pe), F = K(fe);\nfunction H(e) {\n  return /^#[\\da-f]{6}$/i.test(e);\n}\nfunction me(e) {\n  return /^#[\\da-f]{3}$/i.test(e);\n}\nfunction ge(e) {\n  const n = e.replace(/\\s/g, \"\").toLowerCase();\n  if (H(n))\n    return n;\n  if (me(n)) {\n    let t = \"#\";\n    for (let s = 0; s < 3; s += 1)\n      t += n[1 + s].repeat(2);\n    return t;\n  }\n  const r = n.match(/^rgb\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})\\)$/) || n.match(/^rgba\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3}),\\d{1,3}\\)$/);\n  if (!r)\n    throw new Error(`Value \"${e}\" does not satisfy any of known RGB formats.`);\n  return r.slice(1).reduce((t, s) => t + parseInt(s, 10).toString(16).padStart(2, \"0\"), \"#\");\n}\nconst be = M(\n  /* @__PURE__ */ V(\n    /* @__PURE__ */ a(),\n    /* @__PURE__ */ v(\n      /* @__PURE__ */ $([/* @__PURE__ */ a(), /* @__PURE__ */ E()]),\n      /* @__PURE__ */ d((e) => typeof e == \"number\" ? `#${(e & 16777215).toString(16).padStart(6, \"0\")}` : e),\n      /* @__PURE__ */ L(H)\n    )\n  )\n), x = /* @__PURE__ */ c(\n  /* @__PURE__ */ v(/* @__PURE__ */ a(), /* @__PURE__ */ d((e) => e === \"1\"))\n), G = C(be()), de = /* @__PURE__ */ k({\n  tgWebAppBotInline: x,\n  tgWebAppData: /* @__PURE__ */ c(F()),\n  tgWebAppDefaultColors: /* @__PURE__ */ c(G()),\n  tgWebAppFullscreen: x,\n  tgWebAppPlatform: /* @__PURE__ */ a(),\n  tgWebAppShowSettings: x,\n  tgWebAppStartParam: /* @__PURE__ */ c(/* @__PURE__ */ a()),\n  tgWebAppThemeParams: G(),\n  tgWebAppVersion: /* @__PURE__ */ a()\n}), X = K(de), ke = T(F()), _e = T(X()), Se = /* @__PURE__ */ k({\n  eventType: /* @__PURE__ */ a(),\n  eventData: /* @__PURE__ */ c(/* @__PURE__ */ q())\n});\nfunction Y(e, n) {\n  return n || (n = (r, t) => JSON.stringify(t)), new URLSearchParams(\n    Object.entries(e).reduce((r, [t, s]) => (Array.isArray(s) ? r.push(...s.map((u) => [t, String(u)])) : s != null && r.push([\n      t,\n      s instanceof Date ? (s.getTime() / 1e3 | 0).toString() : typeof s == \"string\" || typeof s == \"number\" ? String(s) : typeof s == \"boolean\" ? s ? \"1\" : \"0\" : n(t, s)\n    ]), r), [])\n  ).toString();\n}\nfunction ve(e) {\n  return Y(e);\n}\nfunction Ee(e) {\n  return Y(e, (n, r) => n === \"tgWebAppData\" ? ve(r) : JSON.stringify(r));\n}\nfunction De(e) {\n  try {\n    return /* @__PURE__ */ ie(X(), e);\n  } catch {\n    return !1;\n  }\n}\nexport {\n  le as InitDataChatSchema,\n  fe as InitDataQuerySchema,\n  pe as InitDataUserSchema,\n  de as LaunchParamsSchema,\n  Se as MiniAppsMessageSchema,\n  I as conditionalSnakeKeys,\n  M as createCamelCaseGen,\n  T as createCamelCaseSchemaParserGen,\n  C as createJsonCamelCaseGen,\n  K as createQueryCamelCaseGen,\n  ye as initDataChatJson,\n  F as initDataQuery,\n  he as initDataUserJson,\n  De as isLaunchParamsQuery,\n  H as isRGB,\n  me as isRGBShort,\n  oe as jsonParse,\n  X as launchParamsQuery,\n  ke as parseInitDataQuery,\n  _e as parseLaunchParamsQuery,\n  ve as serializeInitDataQuery,\n  Ee as serializeLaunchParamsQuery,\n  Y as serializeToQuery,\n  be as themeParams,\n  ge as toRGB,\n  ce as transformQueryUsing\n};\n//# sourceMappingURL=index.js.map\n","import { serializeInitDataQuery } from '@telegram-apps/transformers';\n\nimport type { SharedOptions, SignData, SignDataAsyncFn, SignDataSyncFn, Text } from './types.js';\n\nexport type SignOptions = SharedOptions;\n\n/**\n * Signs specified init data.\n * @param data - init data to sign.\n * @param authDate - date, when this init data should be signed.\n * @param key - private key.\n * @param signData - function signing data.\n * @param options - additional options.\n * @returns Signed init data presented as query parameters.\n */\nexport function sign(\n  data: SignData,\n  key: Text,\n  authDate: Date,\n  signData: SignDataSyncFn,\n  options?: SignOptions,\n): string;\n\n/**\n * Signs specified init data.\n * @param data - init data to sign.\n * @param authDate - date, when this init data should be signed.\n * @param key - private key.\n * @param signData - function signing data.\n * @param options - additional options.\n * @returns Signed init data presented as query parameters.\n */\nexport function sign(\n  data: SignData,\n  key: Text,\n  authDate: Date,\n  signData: SignDataAsyncFn,\n  options?: SignOptions,\n): Promise<string>;\n\nexport function sign(\n  data: SignData,\n  key: Text,\n  authDate: Date,\n  signData: SignDataSyncFn | SignDataAsyncFn,\n  options?: SignOptions,\n): string | Promise<string> {\n  // Create search parameters, which will be signed further.\n  const searchParams = new URLSearchParams(\n    serializeInitDataQuery({\n      ...data,\n      auth_date: authDate,\n      hash: '',\n      signature: data.signature || '',\n    }),\n  );\n  searchParams.delete('hash');\n\n  // Convert search params to pairs and sort the final array.\n  const pairs = [...searchParams.entries()]\n    .map(([name, value]) => `${name}=${value}`)\n    .sort();\n\n  // Compute sign, append it to the params and return.\n  function processSign(s: string): string {\n    searchParams.append('hash', s);\n    return searchParams.toString();\n  }\n\n  const sign = signData(pairs.join('\\n'), key, options);\n  return typeof sign === 'string' ? processSign(sign) : sign.then(processSign);\n}\n","/**\n * Converts array buffer to hex.\n * @param buffer - buffer to convert\n */\nexport function arrayBufferToHex(buffer: ArrayBuffer): string {\n  return new Uint8Array(buffer).reduce((acc, byte) => {\n    // Convert byte to hex and pad with zero if needed (e.g., \"0a\" instead of \"a\")\n    return acc + byte.toString(16).padStart(2, '0');\n  }, '');\n}\n","/**\n * Converts a hex string to ArrayBuffer.\n * @param hexString - value to convert.\n */\nexport function hexToArrayBuffer(hexString: string): ArrayBuffer {\n  if (hexString.length % 2 !== 0) {\n    throw new Error('Hex string must have an even number of characters');\n  }\n\n  const buffer = new ArrayBuffer(hexString.length / 2);\n  const uint8Array = new Uint8Array(buffer);\n  for (let i = 0; i < hexString.length; i += 2) {\n    uint8Array[i / 2] = parseInt(hexString.substring(i, i + 2), 16);\n  }\n\n  return buffer;\n}","import { hashToken } from './hashToken.js';\nimport { arrayBufferToHex } from './converters/arrayBufferToHex.js';\nimport { hexToArrayBuffer } from './converters/hexToArrayBuffer.js';\nimport type { CreateHmacFn, SharedOptions, Text } from './types.js';\n\nexport type SignDataOptions = SharedOptions;\n\n/**\n * Signs specified data with the passed token.\n * @param data - data to sign.\n * @param key - private key.\n * @param createHmac - function to create HMAC-SHA256.\n * @param options - additional method options.\n * @returns Data sign.\n */\nexport function signData(\n  data: Text,\n  key: Text,\n  createHmac: CreateHmacFn<false>,\n  options?: SignDataOptions,\n): string;\n\n/**\n * Signs specified data with the passed token.\n * @param data - data to sign.\n * @param key - private key.\n * @param createHmac - function to create HMAC-SHA256.\n * @param options - additional method options.\n * @returns Data sign.\n */\nexport function signData(\n  data: Text,\n  key: Text,\n  createHmac: CreateHmacFn<true>,\n  options?: SignDataOptions,\n): Promise<string>;\n\nexport function signData(\n  data: Text,\n  key: Text,\n  createHmac: CreateHmacFn<boolean>,\n  options: SignDataOptions = {},\n): string | Promise<string> {\n  const keyHmac = options.tokenHashed\n    ? typeof key === 'string'\n      // If a hashed token was passed, we assume that it is a HEX string. Not to mess with\n      // the createHmac function, we should convert this HEX string to ArrayBuffer. Otherwise,\n      // incorrect behavior will be met.\n      ? hexToArrayBuffer(key)\n      : key\n    : hashToken(key, createHmac);\n\n  if (keyHmac instanceof Promise) {\n    return keyHmac.then(v => createHmac(data, v)).then(arrayBufferToHex);\n  }\n\n  const hmac = createHmac(data, keyHmac);\n  return hmac instanceof Promise ? hmac.then(arrayBufferToHex) : arrayBufferToHex(hmac);\n}\n","import { errorClass, errorClassWithData } from 'error-kid';\n\nexport const [\n  AuthDateInvalidError,\n  isAuthDateInvalidError,\n] = errorClassWithData<{ value: string | undefined }, [value?: string]>(\n  'AuthDateInvalidError',\n  value => ({ value }),\n  value => [`\"auth_date\" is invalid: ${value || 'value is missing'}`],\n);\n\nexport const [\n  SignatureInvalidError,\n  isSignatureInvalidError,\n] = errorClass('SignatureInvalidError');\n\nexport const [\n  SignatureMissingError,\n  isSignatureMissingError,\n] = errorClass<[thirdParty: boolean]>('SignatureMissingError', (thirdParty) => [\n  `\"${thirdParty ? 'signature' : 'hash'}\" parameter is missing`,\n]);\n\nexport const [\n  ExpiredError,\n  isExpiredError,\n] = errorClassWithData<\n  { issuedAt: Date; expiresAt: Date },\n  [issuedAt: Date, expiresAt: Date, now: Date]\n>(\n  'ExpiredError',\n  (issuedAt, expiresAt) => ({ issuedAt, expiresAt }),\n  (issuedAt, expiresAt, now) => [\n    `Init data expired. Issued at ${issuedAt.toISOString()}, expires at ${expiresAt.toISOString()}, now is ${now.toISOString()}`,\n  ],\n);","import type { SharedOptions, SignDataAsyncFn, SignDataSyncFn, Text } from './types.js';\nimport {\n  AuthDateInvalidError,\n  ExpiredError,\n  SignatureMissingError,\n  SignatureInvalidError,\n} from './errors.js';\n\nexport interface ValidateOptions extends SharedOptions {\n  /**\n   * Time in seconds which states, how long from creation time init data is considered valid.\n   *\n   * In other words, in case when authDate + expiresIn is before current time, init data is\n   * recognized as expired.\n   *\n   * In case this value is equal to 0, the function does not check init data expiration.\n   * @default 86400 (1 day)\n   */\n  expiresIn?: number;\n}\n\nexport type ValidateValue = string | URLSearchParams;\n\nfunction processSign(actual: string, expected: string): void | never {\n  if (actual !== expected) {\n    throw new SignatureInvalidError();\n  }\n  return;\n}\n\n/**\n * Validates passed init data.\n * @param value - value to check.\n * @param token - bot secret token.\n * @param signData - function signing data.\n * @param options - additional validation options.\n * @throws {SignatureInvalidError} Signature is invalid.\n * @throws {AuthDateInvalidError} \"auth_date\" property is missing or invalid.\n * @throws {SignatureMissingError} \"hash\" property is missing.\n * @throws {ExpiredError} Init data is expired.\n */\nexport function validate(\n  value: ValidateValue,\n  token: Text,\n  signData: SignDataSyncFn,\n  options?: ValidateOptions,\n): void | never;\n\n/**\n * Validates passed init data.\n * @param value - value to check.\n * @param token - bot secret token.\n * @param signData - function signing data.\n * @param options - additional validation options.\n * @throws {SignatureInvalidError} Signature is invalid.\n * @throws {AuthDateInvalidError} \"auth_date\" property is missing or invalid.\n * @throws {SignatureMissingError} \"hash\" property is missing.\n * @throws {ExpiredError} Init data is expired.\n */\nexport function validate(\n  value: ValidateValue,\n  token: Text,\n  signData: SignDataAsyncFn,\n  options?: ValidateOptions,\n): Promise<void>;\n\nexport function validate(\n  value: ValidateValue,\n  token: Text,\n  signData: SignDataSyncFn | SignDataAsyncFn,\n  options: ValidateOptions = {},\n): void | never | Promise<void> {\n  // Init data required params.\n  let authDate: Date | undefined;\n  let authDateString: string | undefined;\n  let hash: string | undefined;\n\n  // All search params pairs presented as `k=v`.\n  const pairs: string[] = [];\n\n  // Iterate over all key-value pairs of parsed parameters and find required\n  // parameters.\n  (typeof value === 'string' ? new URLSearchParams(value) : value).forEach((value, key) => {\n    if (key === 'hash') {\n      hash = value;\n      return;\n    }\n\n    if (key === 'auth_date') {\n      authDateString = value;\n      const authDateNum = parseInt(value, 10);\n      if (!Number.isNaN(authDateNum)) {\n        authDate = new Date(authDateNum * 1000);\n      }\n    }\n\n    pairs.push(`${key}=${value}`);\n  });\n\n  // Hash and auth date always required.\n  if (!hash) {\n    throw new SignatureMissingError(false);\n  }\n\n  if (!authDate) {\n    throw new AuthDateInvalidError(authDateString);\n  }\n\n  // In case, expiration time passed, we do additional parameters check.\n  const { expiresIn = 86400 } = options;\n  if (expiresIn > 0) {\n    // Check if init data expired.\n    const expiresAtTs = authDate.getTime() + expiresIn * 1000;\n    const nowTs = Date.now();\n    if (expiresAtTs < nowTs) {\n      throw new ExpiredError(authDate, new Date(expiresAtTs), new Date(nowTs));\n    }\n  }\n\n  // According to docs, we sort all the pairs in alphabetical order.\n  pairs.sort();\n\n  const sign = signData(pairs.join('\\n'), token, options);\n\n  return typeof sign === 'string'\n    ? processSign(sign, hash)\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n    : sign.then(v => processSign(v, hash!));\n}\n","import type { Text } from './types.js';\nimport type { ValidateOptions, ValidateValue } from './validate.js';\n\ntype ValidateSyncFn = (\n  value: ValidateValue,\n  token: Text,\n  options?: ValidateOptions,\n) => void | never;\n\ntype ValidateAsyncFn = (\n  value: ValidateValue,\n  token: Text,\n  options?: ValidateOptions,\n) => Promise<void>;\n\n/**\n * @param value - value to check.\n * @param token - bot secret token.\n * @param validate - function validating the init data.\n * @param options - additional validation options.\n * @returns True is specified init data is valid.\n */\nexport function isValid(\n  value: ValidateValue,\n  token: Text,\n  validate: ValidateSyncFn,\n  options?: ValidateOptions,\n): boolean;\n\n/**\n * @param value - value to check.\n * @param token - bot secret token.\n * @param validate - function validating the init data.\n * @param options - additional validation options.\n * @returns True is specified init data is valid.\n */\nexport function isValid(\n  value: ValidateValue,\n  token: Text,\n  validate: ValidateAsyncFn,\n  options?: ValidateOptions,\n): Promise<boolean>;\n\nexport function isValid(\n  value: ValidateValue,\n  token: Text,\n  validate: ValidateSyncFn | ValidateAsyncFn,\n  options?: ValidateOptions,\n): boolean | Promise<boolean> {\n  try {\n    const maybePromise = validate(value, token, options);\n    return maybePromise\n      ? maybePromise.then(() => true, () => false)\n      : true;\n  } catch {\n    return false;\n  }\n}\n","import type { Verify3rdFn } from './types.js';\nimport {\n  AuthDateInvalidError,\n  ExpiredError,\n  SignatureInvalidError,\n  SignatureMissingError,\n} from './errors.js';\n\nexport interface Validate3rdOptions {\n  /**\n   * Time in seconds which states, how long from creation time init data is considered valid.\n   *\n   * In other words, in case when authDate + expiresIn is before current time, init data is\n   * recognized as expired.\n   *\n   * In case this value is equal to 0, the function does not check init data expiration.\n   * @default 86400 (1 day)\n   */\n  expiresIn?: number;\n  /**\n   * When true, uses the test environment public key to validate init data.\n   * @default false\n   */\n  test?: boolean;\n}\n\nexport type Validate3rdValue = string | URLSearchParams;\n\nfunction processResult(verified: boolean): void | never {\n  if (!verified) {\n    throw new SignatureInvalidError();\n  }\n  return;\n}\n\n/**\n * Validates passed init data using a publicly known Ee25519 key.\n * @param value - value to check.\n * @param botId - bot identifier\n * @param verify - function to verify sign\n * @param options - additional validation options.\n * @throws {SignatureInvalidError} Signature is invalid.\n * @throws {AuthDateInvalidError} \"auth_date\" property is missing or invalid.\n * @throws {SignatureMissingError} \"hash\" property is missing.\n * @throws {ExpiredError} Init data is expired.\n */\nexport function validate3rd(\n  value: Validate3rdValue,\n  botId: number,\n  verify: Verify3rdFn<false>,\n  options?: Validate3rdOptions,\n): void | never;\n\n/**\n * Validates passed init data using a publicly known Ee25519 key.\n * @param value - value to check.\n * @param botId - bot identifier\n * @param verify - function to verify sign\n * @param options - additional validation options.\n * @throws {SignatureInvalidError} Signature is invalid.\n * @throws {AuthDateInvalidError} \"auth_date\" property is missing or invalid.\n * @throws {SignatureMissingError} \"hash\" property is missing.\n * @throws {ExpiredError} Init data is expired.\n */\nexport function validate3rd(\n  value: Validate3rdValue,\n  botId: number,\n  verify: Verify3rdFn<true>,\n  options?: Validate3rdOptions,\n): Promise<void>;\n\nexport function validate3rd(\n  value: Validate3rdValue,\n  botId: number,\n  verify: Verify3rdFn<boolean>,\n  options: Validate3rdOptions = {},\n): void | never | Promise<void> {\n  // Init data required params.\n  let authDate: Date | undefined;\n  let authDateString: string | undefined;\n  let signature: string | undefined;\n\n  // All search params pairs presented as `k=v`.\n  const pairs: string[] = [];\n\n  // Iterate over all key-value pairs of parsed parameters and find required\n  // parameters.\n  (typeof value === 'string' ? new URLSearchParams(value) : value).forEach((value, key) => {\n    if (key === 'hash') {\n      return;\n    }\n\n    if (key === 'signature') {\n      signature = value;\n      return;\n    }\n\n    if (key === 'auth_date') {\n      authDateString = value;\n      const authDateNum = parseInt(value, 10);\n      if (!Number.isNaN(authDateNum)) {\n        authDate = new Date(authDateNum * 1000);\n      }\n    }\n\n    pairs.push(`${key}=${value}`);\n  });\n\n  // Signature and auth date always required.\n  if (!signature) {\n    throw new SignatureMissingError(true);\n  }\n\n  if (!authDate) {\n    throw new AuthDateInvalidError(authDateString);\n  }\n\n  // In case, expiration time passed, we do additional parameters check.\n  const { expiresIn = 86400 } = options;\n  if (expiresIn > 0) {\n    // Check if init data expired.\n    const expiresAtTs = authDate.getTime() + expiresIn * 1000;\n    const nowTs = Date.now();\n    if (expiresAtTs < nowTs) {\n      throw new ExpiredError(authDate, new Date(expiresAtTs), new Date(nowTs));\n    }\n  }\n\n  const verified = verify(\n    `${botId}:WebAppData\\n${pairs.sort().join('\\n')}`,\n    options.test\n      ? '40055058a4ee38156a06562e52eece92a771bcd8346a8c4615cb7376eddf72ec'\n      : 'e7bf03a2fa4602af4580703d88dda5bb59f32ed8b02a56c187fe7d34caed242d',\n    signature,\n  );\n\n  return typeof verified === 'boolean' ? processResult(verified) : verified.then(processResult);\n}\n","import type { Validate3rdOptions, Validate3rdValue } from './validate3rd.js';\n\ntype ValidateSyncFn = (\n  value: Validate3rdValue,\n  botId: number,\n  options?: Validate3rdOptions,\n) => void | never;\n\ntype ValidateAsyncFn = (\n  value: Validate3rdValue,\n  botId: number,\n  options?: Validate3rdOptions,\n) => Promise<void>;\n\n/**\n * @param value - value to check.\n * @param botId - bot identifier\n * @param validate - function validating the init data.\n * @param options - additional validation options.\n * @returns True is specified init data is signed by Telegram.\n */\nexport function isValid3rd(\n  value: Validate3rdValue,\n  botId: number,\n  validate: ValidateAsyncFn,\n  options?: Validate3rdOptions,\n): Promise<boolean>;\n\n/**\n * @param value - value to check.\n * @param botId - bot identifier\n * @param validate - function validating the init data.\n * @param options - additional validation options.\n * @returns True is specified init data is signed by Telegram.\n */\nexport function isValid3rd(\n  value: Validate3rdValue,\n  botId: number,\n  validate: ValidateSyncFn,\n  options?: Validate3rdOptions,\n): boolean;\n\nexport function isValid3rd(\n  value: Validate3rdValue,\n  botId: number,\n  validate: ValidateSyncFn | ValidateAsyncFn,\n  options?: Validate3rdOptions,\n): boolean | Promise<boolean> {\n  try {\n    const maybePromise = validate(value, botId, options);\n    return maybePromise\n      ? maybePromise.then(() => true, () => false)\n      : true;\n  } catch {\n    return false;\n  }\n}\n","import { parseInitDataQuery } from '@telegram-apps/transformers';\n\n/**\n * Parses an incoming value as init data.\n */\nexport const parse = parseInitDataQuery;\n","import {\n  validate3rd as _validate3rd,\n  type Validate3rdValue,\n  type Validate3rdOptions,\n} from '../validate3rd.js';\nimport { isValid3rd as _isValid3rd } from '../isValid3rd.js';\nimport type { Verify3rdFn } from '../types.js';\n\nexport type { Chat, ChatType, InitData, User } from '@telegram-apps/types';\n\nexport { parse } from '../parse.js';\nexport type { ValidateOptions, ValidateValue } from '../validate.js';\nexport type { SignData, Text, CreateHmacFn } from '../types.js';\nexport {\n  SignatureMissingError,\n  SignatureInvalidError,\n  ExpiredError,\n  AuthDateInvalidError,\n  isSignatureMissingError,\n  isAuthDateInvalidError,\n  isExpiredError,\n  isSignatureInvalidError,\n} from '../errors.js';\n\nexport type { Validate3rdValue, Validate3rdOptions, Verify3rdFn };\n\nconst verify3rd: Verify3rdFn<true> = async (data, key, signature) => {\n  return crypto.subtle.verify(\n    'Ed25519',\n    await crypto\n      .subtle\n      .importKey('raw', Buffer.from(key, 'hex'), 'Ed25519', false, ['verify']),\n    Buffer.from(signature, 'base64'),\n    Buffer.from(data),\n  );\n};\n\n/**\n * Validates passed init data using a publicly known Ee25519 key.\n * @param value - value to check.\n * @param botId - bot identifier\n * @param options - additional validation options.\n * @throws {SignatureInvalidError} Signature is invalid.\n * @throws {AuthDateInvalidError} \"auth_date\" property is missing or invalid.\n * @throws {SignatureMissingError} \"hash\" property is missing.\n * @throws {ExpiredError} Init data is expired.\n */\nexport async function validate3rd(\n  value: Validate3rdValue,\n  botId: number,\n  options?: Validate3rdOptions,\n): Promise<void> {\n  return _validate3rd(value, botId, verify3rd, options);\n}\n\n/**\n * @param value - value to check.\n * @param botId - bot identifier\n * @param options - additional validation options.\n * @returns True is specified init data is signed by Telegram.\n */\nexport function isValid3rd(\n  value: Validate3rdValue,\n  botId: number,\n  options?: Validate3rdOptions,\n): Promise<boolean> {\n  return _isValid3rd(value, botId, validate3rd, options);\n}"],"names":["signData","serializeInitDataQuery","processSign","sign","v","errorClassWithData","errorClass","value","validate","validate3rd","isValid3rd","parseInitDataQuery","_validate3rd","_isValid3rd"],"mappings":"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"}